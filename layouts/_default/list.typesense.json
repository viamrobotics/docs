{{- $.Scratch.Add "index" slice -}}
{{- $section := $.Site.GetPage "section" .Section -}}
      {{- range .Site.AllPages -}}
            {{- if or (and (.IsDescendant $section) (and (not .Draft) (and (not .Params.private) (not .Params.empty_node)))) $section.IsHome -}}
                  {{- if eq .Section "tutorials" -}}
                        {{- $.Scratch.Set "latestDate" .Date.UTC.Unix -}}
                        {{- if .Params.updated -}}
                              {{- $.Scratch.Set "latestDate" ((time .Params.updated).UTC.Unix) -}}
                        {{- end -}}
                        {{- if not (.Params.cost) -}}
                              {{- errorf "No cost on tutorial: %s" .Title -}}
                        {{- end -}}

                        {{- if .Weight -}}
                              {{- $.Scratch.Set "featured" .Weight -}}
                        {{- else -}}
                              {{- $.Scratch.Set "featured" 9999 -}}
                        {{- end -}}

                        {{- if (index .Params.videos 0) -}}
                              {{- if and (eq (path.Ext (index .Params.videos 0)) ".webm") (eq (path.Ext (index .Params.videos 1)) ".mp4") -}}

                                    {{- if eq ((index .Params.videos 0) | printf "%.1s") "/" -}}
                                          {{- $.Scratch.Set "webm" (printf "..%s" (index .Params.videos 0)) -}}
                                    {{- else -}}
                                          {{- $.Scratch.Set "webm" (printf "%s" (index .Params.videos 0)) -}}
                                    {{- end -}}
                                    {{- if eq ((index .Params.videos 1) | printf "%.1s") "/" -}}
                                          {{- $.Scratch.Set "mp4" (printf "..%s" (index .Params.videos 1)) -}}
                                    {{- else -}}
                                          {{- $.Scratch.Set "mp4" (printf "%s" (index .Params.videos 1)) -}}
                                    {{- end -}}

                              {{- else if and (eq (path.Ext (index .Params.videos 1)) ".webm") (eq (path.Ext (index .Params.videos 0)) ".mp4") -}}

                                    {{- if eq ((index .Params.videos 1) | printf "%.1s") "/" -}}
                                          {{- $.Scratch.Set "webm" (printf "..%s" (index .Params.videos 1)) -}}
                                    {{- else -}}
                                          {{- $.Scratch.Set "webm" (printf "%s" (index .Params.videos 1)) -}}
                                    {{- end -}}
                                    {{- if eq ((index .Params.videos 0) | printf "%.1s") "/" -}}
                                          {{- $.Scratch.Set "mp4" (printf "..%s" (index .Params.videos 0)) -}}
                                    {{- else -}}
                                          {{- $.Scratch.Set "mp4" (printf "%s" (index .Params.videos 0)) -}}
                                    {{- end -}}

                              {{- end -}}
                              {{- $.Scratch.Set "image" "" -}}
                        {{- else -}}
                              {{- $.Scratch.Set "webm" "" -}}
                              {{- $.Scratch.Set "mp4" "" -}}
                              {{- if (index .Params.images 0) -}}
                                    {{- $image_ext := path.Ext (index .Params.images 0) -}}
                                    {{- $image_extensions := slice ".png" ".jpg" ".jpeg" ".svg" -}}
                                    {{- if in $image_extensions $image_ext -}}
                                          {{- if eq ((index .Params.images 0) | printf "%.1s") "/" -}}
                                                {{- $.Scratch.Set "image" (printf "..%s" (index .Params.images 0)) -}}
                                          {{- else -}}
                                                {{- $.Scratch.Set "image" (printf "%s" (index .Params.images 0)) -}}
                                          {{- end -}}
                                    {{- else -}}
                                          {{- $.Scratch.Set "image" "" -}}
                                    {{- end -}}
                              {{- else -}}
                              {{- $.Scratch.Set "image" "" -}}
                              {{- end -}}
                        {{- end -}}

                        {{- if .Params.resource -}}
                              {{- $.Scratch.Set "resource" .Params.resource -}}
                        {{- else -}}
                              {{- $.Scratch.Set "resource" "tutorial" -}}
                        {{- end -}}

                        {{- if .Params.canonical -}}
                              {{- $.Scratch.Set "permalink" (printf "%s" .Params.canonical) -}}
                              {{- $.Scratch.Set "relpermalink" (printf "%s" .Params.canonical) -}}
                        {{- else -}}
                              {{- $.Scratch.Set "permalink" .Permalink -}}
                              {{- $.Scratch.Set "relpermalink" (printf "..%s" .RelPermalink) -}}
                        {{- end -}}

                        {{- $.Scratch.Add "index"
                        (dict
                              "id" .File.UniqueID
                              "date" ($.Scratch.Get "latestDate")
                              "description" .Description
                              "fuzzywordcount" .FuzzyWordCount
                              "lastmod" .Lastmod.UTC.Unix
                              "permalink" ($.Scratch.Get "permalink")
                              "publishdate" .PublishDate
                              "readingtime" .ReadingTime
                              "relpermalink" ($.Scratch.Get "relpermalink")
                              "title" .Title
                              "linktitle" .LinkTitle
                              "wordcount" .WordCount
                              "section" .Section
                              "tags" .Params.Tags
                              "authors" .Params.Authors
                              "images" .Params.images
                              "webm" ($.Scratch.Get "webm")
                              "mp4" ($.Scratch.Get "mp4")
                              "image" ($.Scratch.Get "image")
                              "imageAlt" .Params.imageAlt
                              "videoAlt" .Params.videoAlt
                              "languages" .Params.languages
                              "viamservices" (intersect (.Params.viamresources) (slice "data_manager" "motion" "frame_system" "mlmodel" "navigation" "base_remote_control" "sensors" "slam" "vision"))
                              "viamcomponents" (intersect (.Params.viamresources) (slice "arm" "base" "board" "camera" "encoder" "generic" "encoder" "gantry" "gripper" "input_controller" "motor" "movement_sensor" "power_sensor" "sensor" "servo"))
                              "level" .Params.level
                              "cost" (int (.Params.cost))
                              "featured" ($.Scratch.Get "featured")
                              "resource" ($.Scratch.Get "resource")
                        )}}
                  {{- end -}}
            {{- end -}}
            {{- if eq .Section "components" -}}
                  {{- if and (and (ne .Parent.Title "Components") (not .Draft)) (not .Params.no_component) -}}
                  {{- if .Params.canonical -}}
                        {{- $.Scratch.Set "permalink" (printf "%s" .Params.canonical) -}}
                        {{- $.Scratch.Set "relpermalink" (printf "%s" .Params.canonical) -}}
                  {{- else -}}
                        {{- $.Scratch.Set "permalink" .Permalink -}}
                        {{- $.Scratch.Set "relpermalink" (printf "../..%s" .RelPermalink) -}}
                  {{- end -}}

                  {{- $.Scratch.Set "id" (printf "builtin:rdk:component:%s:%s" (strings.Replace (strings.ToLower .Parent.LinkTitle) " " "_" ) (strings.ToLower .LinkTitle) ) -}}
                  {{- $.Scratch.Set "api" (printf "rdk:component:%s" (strings.Replace (strings.ToLower .Parent.LinkTitle) " " "_" )) -}}
                  {{- $.Scratch.Set "component_description" (printf "Built-in component: %s" .Params.component_description) -}}
                  {{- if .Params.usage -}}
                        {{- $.Scratch.Set "usage" .Params.usage -}}
                  {{- else -}}
                        {{- $.Scratch.Set "usage" 800000 -}}
                  {{- end -}}
                  {{- if not .Params.component_description -}}
                        {{ warnf "Missing description: %s %s" .Parent.LinkTitle .LinkTitle }}
                  {{- end -}}
                  {{- $.Scratch.Add "index"
                  (dict
                  "id" ($.Scratch.Get "id")
                  "module_id" "builtin"
                  "url" ($.Scratch.Get "relpermalink")
                  "type" (strings.Replace (strings.ToLower .LinkTitle) " " "_" )
                  "model" .LinkTitle
                  "description" ($.Scratch.Get "component_description")
                  "api" ($.Scratch.Get "api")
                  "total_organization_usage" ($.Scratch.Get "usage")
                  "total_robot_usage" ($.Scratch.Get "usage")
                  )}}
                  {{- end -}}
            {{- end -}}
            {{- if eq .Section "services" -}}
                  {{ $services_with_resources := slice "Generic Service" "Deploy Model" "Computer Vision" }}
                  {{- if and (in $services_with_resources .Parent.LinkTitle) (and (not .Draft) (not .Params.no_service)) -}}
                  {{- if .Params.canonical -}}
                        {{- $.Scratch.Set "permalink" (printf "%s" .Params.canonical) -}}
                        {{- $.Scratch.Set "relpermalink" (printf "%s" .Params.canonical) -}}
                  {{- else -}}
                        {{- $.Scratch.Set "permalink" .Permalink -}}
                        {{- $.Scratch.Set "relpermalink" (printf "../..%s" .RelPermalink) -}}
                  {{- end -}}

                  {{- $.Scratch.Set "id" (printf "builtin:rdk:service:%s:%s" (strings.Replace (strings.ToLower .Parent.LinkTitle) " " "_" ) (strings.ToLower .LinkTitle) ) -}}
                  {{- if eq .Parent.LinkTitle "Deploy Model" -}}
                        {{- $.Scratch.Set "api" (printf "rdk:service:mlmodel" ) -}}
                  {{- else -}}
                        {{- if eq .Parent.LinkTitle "Generic Service" -}}
                        {{- $.Scratch.Set "api" (printf "rdk:service:generic" ) -}}
                        {{- else -}}
                        {{- $.Scratch.Set "api" (printf "rdk:service:vision" ) -}}
                        {{- end -}}
                  {{- end -}}
                  {{- $.Scratch.Set "service_description" (printf "Built-in service: %s" .Params.service_description) -}}
                  {{- if .Params.usage -}}
                        {{- $.Scratch.Set "usage" .Params.usage -}}
                  {{- else -}}
                        {{- $.Scratch.Set "usage" 800000 -}}
                  {{- end -}}
                  {{- if not .Params.service_description -}}
                        {{ warnf "Missing description: %s %s" .Parent.LinkTitle .LinkTitle }}
                  {{- end -}}
                  {{- $.Scratch.Add "index"
                  (dict
                  "id" ($.Scratch.Get "id")
                  "module_id" "builtin"
                  "url" ($.Scratch.Get "relpermalink")
                  "type" (strings.Replace (strings.ToLower .LinkTitle) " " "_" )
                  "model" .LinkTitle
                  "description" ($.Scratch.Get "service_description")
                  "api" ($.Scratch.Get "api")
                  "total_organization_usage" ($.Scratch.Get "usage")
                  "total_robot_usage" ($.Scratch.Get "usage")
                  )}}
                  {{- end -}}
            {{- end -}}
      {{- end -}}
{{- $.Scratch.Get "index" | jsonify -}}